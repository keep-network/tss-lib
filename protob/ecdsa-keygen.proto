// Copyright Â© 2019 Binance
//
// This file is part of Binance. The full Binance copyright notice, including
// terms governing use, modification, and redistribution, is contained in the
// file LICENSE at the root of the source code distribution tree.

syntax = "proto3";

option go_package = "ecdsa/keygen";

/*
 * Represents a BROADCAST message sent during Round 1 of the ECDSA TSS keygen protocol.
 */
message KGRound1Message {
    bytes commitment = 1;
    bytes paillier_n = 2;
    bytes n_tilde = 3;
    bytes h1 = 4;
    bytes h2 = 5;
}

/*
 * Represents a P2P message sent to each party during Round 2 of the ECDSA TSS keygen protocol.
 */
message KGRound2Message1 {
    bytes share = 1;
}

/*
 * Represents a BROADCAST message sent to each party during Round 2 of the ECDSA TSS keygen protocol.
 */
message KGRound2Message2 {
    repeated bytes de_commitment = 1;
}

/*
 * Represents a BROADCAST message sent to each party during Round 3 of the ECDSA TSS keygen protocol.
 */
message KGRound3Message {
    repeated bytes paillier_proof = 1;
}

/*
 * Represents output data of ECDSA TSS keygen protocol.
 */
message KGLocalPartySaveData {
  message LocalPreParams {
    message PrivateKey {
      bytes publicKey = 1;
      bytes lambdaN = 2;
      bytes phiN = 3;
    }

    PrivateKey paillierSK = 1;
    bytes nTilde = 2;
    bytes h1i = 3;
    bytes h2i = 4;
  }

  message LocalSecrets {
    bytes xi = 1;
    bytes shareID = 2;
  }

  LocalPreParams localPreParams = 1;
  LocalSecrets localSecrets = 2;
  repeated bytes ks = 3;
  repeated bytes nTildej = 4;
  repeated bytes h1j = 5;
  repeated bytes h2j = 6;
  repeated bytes bigXj = 7;
  repeated bytes paillierPKs = 8;
  bytes ecdsaPub = 9;
}
